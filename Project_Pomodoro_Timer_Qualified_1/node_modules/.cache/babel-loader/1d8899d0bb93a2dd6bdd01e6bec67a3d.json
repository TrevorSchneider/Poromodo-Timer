{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tschn\\\\Desktop\\\\Coding Bootcamp\\\\Projects\\\\pomodoro-timer\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Duration.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { PropTypes } from \"prop-types\";\n\nfunction Duration({\n  type,\n  time,\n  setTime,\n  high,\n  low,\n  inSession,\n  increment\n}) {\n  //line 6 is only for qualified testing purposes\n  const focus = type.toLowerCase();\n\n  const handleClick = change => {\n    if (!inSession) setTime(type, change);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": `duration-${focus}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, type, \" Duration: \", minutesToDuration(time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": `decrease-${focus}`,\n    onClick: () => {\n      if (time > low) handleClick(-increment);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": `increase-${focus}`,\n    onClick: () => {\n      if (time < high) handleClick(increment);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })))));\n}\n\nDuration.propTypes = {\n  type: PropTypes.string,\n  time: PropTypes.number,\n  setTime: PropTypes.func,\n  high: PropTypes.number,\n  low: PropTypes.number,\n  inSession: PropTypes.bool,\n  increment: PropTypes.number\n};\nexport default Duration;","map":{"version":3,"sources":["C:/Users/tschn/Desktop/Coding Bootcamp/Projects/pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Duration.js"],"names":["React","minutesToDuration","PropTypes","Duration","type","time","setTime","high","low","inSession","increment","focus","toLowerCase","handleClick","change","propTypes","string","number","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA,GAA7B;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA;AAA7C,CAAlB,EAA4E;AAC1E;AACA,QAAMC,KAAK,GAAGP,IAAI,CAACQ,WAAL,EAAd;;AACA,QAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,QAAI,CAACL,SAAL,EAAgBH,OAAO,CAACF,IAAD,EAAOU,MAAP,CAAP;AACjB,GAFD;;AAIA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAc,YAAWH,KAAM,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGP,IAFH,iBAEoBH,iBAAiB,CAACI,IAAD,CAFrC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAc,YAAWM,KAAM,EAHjC;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIN,IAAI,GAAGG,GAAX,EAAgBK,WAAW,CAAC,CAACH,SAAF,CAAX;AACjB,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,eAaE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAc,YAAWC,KAAM,EAHjC;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIN,IAAI,GAAGE,IAAX,EAAiBM,WAAW,CAACH,SAAD,CAAX;AAClB,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAbF,CALF,CADF,CADF;AAkCD;;AAEDP,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,IAAI,EAAEF,SAAS,CAACc,MADG;AAEnBX,EAAAA,IAAI,EAAEH,SAAS,CAACe,MAFG;AAGnBX,EAAAA,OAAO,EAAEJ,SAAS,CAACgB,IAHA;AAInBX,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAJG;AAKnBT,EAAAA,GAAG,EAAEN,SAAS,CAACe,MALI;AAMnBR,EAAAA,SAAS,EAAEP,SAAS,CAACiB,IANF;AAOnBT,EAAAA,SAAS,EAAER,SAAS,CAACe;AAPF,CAArB;AAUA,eAAed,QAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nfunction Duration({ type, time, setTime, high, low, inSession, increment }) {\r\n  //line 6 is only for qualified testing purposes\r\n  const focus = type.toLowerCase();\r\n  const handleClick = (change) => {\r\n    if (!inSession) setTime(type, change);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-group input-group-lg mb-2\">\r\n        <span className=\"input-group-text\" data-testid={`duration-${focus}`}>\r\n          {/* TODO: Update this text to display the current focus session duration */}\r\n          {type} Duration: {minutesToDuration(time)}\r\n        </span>\r\n        <div className=\"input-group-append\">\r\n          {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid={`decrease-${focus}`}\r\n            onClick={() => {\r\n              if (time > low) handleClick(-increment);\r\n            }}\r\n          >\r\n            <span className=\"oi oi-minus\" />\r\n          </button>\r\n          {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid={`increase-${focus}`}\r\n            onClick={() => {\r\n              if (time < high) handleClick(increment);\r\n            }}\r\n          >\r\n            <span className=\"oi oi-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nDuration.propTypes = {\r\n  type: PropTypes.string,\r\n  time: PropTypes.number,\r\n  setTime: PropTypes.func,\r\n  high: PropTypes.number,\r\n  low: PropTypes.number,\r\n  inSession: PropTypes.bool,\r\n  increment: PropTypes.number,\r\n};\r\n\r\nexport default Duration;\r\n"]},"metadata":{},"sourceType":"module"}